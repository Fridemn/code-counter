{"version":3,"file":"extension.js","mappings":"uuBAyBA,oBAAyBA,GACrBC,QAAQC,IAAI,iEAlBhB,WACI,GAAKC,EAAGC,WAAWC,GAGZ,CACH,MAAMC,EAAOC,KAAKC,MAAML,EAAGM,aAAaJ,EAAc,UACtDK,EAAaJ,EAAKI,YAAc,CAAC,CACrC,KANkC,CAC9B,MAAMC,EAAc,CAAC,EACrBR,EAAGS,cAAcP,EAAcE,KAAKM,UAAUF,EAAa,KAAM,GACrE,CAIJ,CAYIG,GAEA,MAAMC,EAAyBC,EAAOC,SAASC,gBAAgB,sBAAsB,KACjF,MAAMC,EAASC,OAAOC,QAAQX,GACzBY,KAAI,EAAEC,EAAUC,KAAW,GAAGD,MAAaC,MAC3CC,KAAK,MACVT,EAAOU,OAAOC,uBAAuB,WAAWR,KAAU,IAE9DnB,EAAQ4B,cAAcC,KAAKd,GAG3BC,EAAOc,UAAUC,yBAAwBC,IACrC,MAAMT,EAAWS,EAAMC,SAASC,WAC3BxB,EAAWa,KACZb,EAAWa,GAAY,GAG3B,IAAK,MAAMY,KAAUH,EAAMI,eAAgB,CACvC,MAAMC,EAAOF,EAAOE,KACpB,IAAK,MAAMC,KAAQD,EACF,OAATC,GACA5B,EAAWa,IAGvB,EAjCR,WACI,MAAMjB,EAAO,CAAEI,cACfP,EAAGS,cAAcP,EAAcE,KAAKM,UAAUP,EAAM,KAAM,GAC9D,CA+BQiC,EAAgB,GAExB,EAEA,wBAA8B,EAzD9B,kBACA,YACA,YAEA,IAAI7B,EAA6C,CAAC,EAClD,MAAML,EAAemC,EAAKf,KAAKgB,UAAW,kB,UCL1CC,EAAOC,QAAUC,QAAQ,S,UCAzBF,EAAOC,QAAUC,QAAQ,K,UCAzBF,EAAOC,QAAUC,QAAQ,O,GCCrBC,EAA2B,CAAC,ECE5BC,EDCJ,SAASC,EAAoBC,GAE5B,IAAIC,EAAeJ,EAAyBG,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaN,QAGrB,IAAID,EAASG,EAAyBG,GAAY,CAGjDL,QAAS,CAAC,GAOX,OAHAQ,EAAoBH,GAAUI,KAAKV,EAAOC,QAASD,EAAQA,EAAOC,QAASI,GAGpEL,EAAOC,OACf,CCnB0BI,CAAoB,K","sources":["webpack://Fridemn/./src/extension.ts","webpack://Fridemn/external commonjs \"vscode\"","webpack://Fridemn/external node-commonjs \"fs\"","webpack://Fridemn/external node-commonjs \"path\"","webpack://Fridemn/webpack/bootstrap","webpack://Fridemn/webpack/startup"],"sourcesContent":["import * as vscode from 'vscode';\nimport * as fs from 'fs';\nimport * as path from 'path';\n\nlet CodeVolume: { [language: string]: number } = {};\nconst dataFilePath = path.join(__dirname, 'codeVolume.json');\n\n\nfunction initializeDataFile() {\n    if (!fs.existsSync(dataFilePath)) {\n        const initialData = {};\n        fs.writeFileSync(dataFilePath, JSON.stringify(initialData, null, 2));\n    } else {\n        const data = JSON.parse(fs.readFileSync(dataFilePath, 'utf-8'));\n        CodeVolume = data.CodeVolume || {};\n    }\n}\n\n\nfunction updateDataFile() {\n    const data = { CodeVolume };\n    fs.writeFileSync(dataFilePath, JSON.stringify(data, null, 2));\n}\n\n\nexport function activate(context: vscode.ExtensionContext) {\n    console.log('Congratulations, your extension \"code-counter\" is now active!');\n\n    initializeDataFile();\n\n    const showCodeCounterCommand = vscode.commands.registerCommand('Code-counter.shCnt', () => {\n        const counts = Object.entries(CodeVolume)\n            .map(([language, count]) => `${language}: ${count}`)\n            .join(', ');\n        vscode.window.showInformationMessage(`已记录代码量: ${counts}行`);\n    });\n    context.subscriptions.push(showCodeCounterCommand);\n\n    \n    vscode.workspace.onDidChangeTextDocument(event => {\n        const language = event.document.languageId;\n        if (!CodeVolume[language]) {\n            CodeVolume[language] = 0;\n        }\n\n        for (const change of event.contentChanges) {\n            const text = change.text;\n            for (const char of text) {\n                if (char === '\\n') {\n                    CodeVolume[language]++;\n                }\n            }\n        }\n        updateDataFile();\n    });\n}\n\nexport function deactivate() {}","module.exports = require(\"vscode\");","module.exports = require(\"fs\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(265);\n"],"names":["context","console","log","fs","existsSync","dataFilePath","data","JSON","parse","readFileSync","CodeVolume","initialData","writeFileSync","stringify","initializeDataFile","showCodeCounterCommand","vscode","commands","registerCommand","counts","Object","entries","map","language","count","join","window","showInformationMessage","subscriptions","push","workspace","onDidChangeTextDocument","event","document","languageId","change","contentChanges","text","char","updateDataFile","path","__dirname","module","exports","require","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","call"],"sourceRoot":""}